// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

model Resume {
  id          String      @id @default(cuid())
  userId      String
  
  title       String?
  description String?

  photoUrl    String? @map("photo_url")
  colorHex    String @default("#000000") @map("color_hex")
  borderStyle String @default("squircle") @map("border_style")
  summary     String?
  firstName   String? @map("first_name")
  lastName    String? @map("last_name")
  jobTitle    String? @map("job_title")
  city        String?
  country     String?
  phone       String?
  email       String?
  website     String?

  experiences Experience[]
  educations  Education[]
  skills      String[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("resumes")
}

model Experience {
  id          String      @id @default(cuid())

  position    String?
  company     String?
  location    String?
  startDate   DateTime?
  endDate     DateTime?
  description String?

  resumeId    String
  resume      Resume @relation(fields: [resumeId], references: [id])

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("experiences")
}

model Education {
  id          String      @id @default(cuid())

  degree      String?
  school      String?
  field       String?
  startDate   DateTime?
  endDate     DateTime?
  description String?

  resumeId    String
  resume      Resume @relation(fields: [resumeId], references: [id])

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("educations")
}

model UserSubscription {
  id                      String @id @default(cuid())
  userId                  String @unique
  stripeCustomerId        String @unique
  stripeSubscriptionId    String @unique
  stripePriceId           String 
  stripeCurrentPeriodEnd  DateTime
  stripeCancelAtPeriodEnd Boolean @default(false)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("user_subscriptions")
}

